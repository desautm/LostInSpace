---
title: "Perdus dans l'espace!"
author: "Marc-André Désautels"
date: "Octobre 2023?"
format: 
  revealjs:
    preview-links: auto
title-slide-attributes:
  data-background-color: black
---

```{r setup, include=FALSE}
options(htmltools.dir.version = FALSE)
set.seed(987654321)
knitr::opts_chunk$set(
  echo = FALSE,
  cache = TRUE
)

library(tidyverse)
library(readxl)
library(here)
library(autoimage)
library(magick)

NUMBER_OF_STARS <- 300
xc <- runif(NUMBER_OF_STARS)
yc <- runif(NUMBER_OF_STARS)

thesky <- tibble(
  x = xc,
  y = yc,
  type = sample(c("real", "missing", "extra"), NUMBER_OF_STARS, prob = c(0.8,0.1,0.1), replace = TRUE)
)
wndow <- 0.25
mysky <- thesky %>% 
  filter(
    xc >= 0.5-wndow,
    xc <= 0.5+wndow,
    yc >= 0.5-wndow,
    yc <= 0.5+wndow
  )
mycoords <- matrix(c(mysky$x,mysky$y),ncol=2)
rot_mycoords <- rotate(mycoords, pi/4, pivot = c(0.5, 0.5))
rot_mysky <- tibble(
  x = rot_mycoords[,1],
  y = rot_mycoords[,2],
  type = mysky$type
)

rot_mysky %>% 
  filter(
    type %in% c("real","extra")
  ) %>% 
  ggplot(aes(x = x, y = y))+
  geom_point(color = "white", size = 2) +
  theme_void()+
  theme(legend.position="none")+
  coord_cartesian(xlim = c(0,1), ylim=c(0,1))
ggsave("rot_mysky_real_extra.png",path=here("docs"),width = 5, height = 5)

rot_mysky %>% 
  filter(
    type %in% c("real","extra","missing")
  ) %>% 
  ggplot(aes(x = x, y = y))+
  geom_point(color = "white", size = 2) +
  theme_void()+
  theme(legend.position="none")+
  coord_cartesian(xlim = c(0,1), ylim=c(0,1))
ggsave("rot_mysky_real_extra_missing.png",path=here("docs"),width = 5, height = 5)

rot_mysky %>% 
  filter(
    type %in% c("real","missing")
  ) %>% 
  ggplot(aes(x = x, y = y))+
  geom_point(color = "white", size = 2) +
  theme_void()+
  theme(legend.position="none")+
  coord_cartesian(xlim = c(0,1), ylim=c(0,1))
ggsave("rot_mysky_real_missing.png",path=here("docs"),width = 5, height = 5)

rot_mysky %>% 
  filter(
    type %in% c("real","missing")
  ) %>% 
  ggplot(aes(x = x, y = y))+
  geom_polygon(data=data.frame(x=c(0.5,0.8536,0.5,0.1464),y=c(0.1464,0.5,0.8536,0.5)),color="red",fill="white",alpha=0,linewidth=1.25)+
  geom_point(color = "white", size = 2) +
  theme_void()+
  theme(legend.position="none")+
  coord_cartesian(xlim = c(0,1), ylim=c(0,1))
ggsave("rot_mysky_real_missing_rect.png",path=here("docs"),width = 5, height = 5)

mysky %>% 
  filter(
    type %in% c("real","missing")
  ) %>% 
  ggplot(aes(x = x, y = y))+
  geom_point(color = "white", size = 2) +
  theme_void()+
  theme(legend.position="none")+
  coord_cartesian(xlim = c(0,1), ylim=c(0,1))
ggsave("mysky_real_missing.png",path=here("docs"),width = 5, height = 5)

mysky %>% 
  filter(
    type %in% c("real","missing")
  ) %>% 
  ggplot(aes(x = x, y = y))+
  geom_rect(aes(xmin=0.25,xmax=0.75,ymin=0.25,ymax=0.75),color="red",fill="white",alpha=0,linewidth=1.25)+
  geom_point(color = "white", size = 2) +
  theme_void()+
  theme(legend.position="none")+
  coord_cartesian(xlim = c(0,1), ylim=c(0,1))
ggsave("mysky_real_missing_rect.png",path=here("docs"),width = 5, height = 5)

thesky %>% 
  filter(
    type %in% c("real","missing")
  ) %>% 
  ggplot(aes(x = x, y = y))+
  geom_point(color = "white", size = 2) +
  theme_void()+
  theme(legend.position="none")+
  coord_cartesian(xlim = c(0,1), ylim=c(0,1))
ggsave("thesky_real_missing.png",path=here("docs"),width = 5, height = 5)

stars <- read_delim(here("R","stars.csv"))

elephant <- image_read(here("docs","elephant_trunk.jpg"))
elephant_info <- image_info(elephant)
w <- elephant_info$width
h <- elephant_info$height
brightest <- stars %>% 
  arrange(mag) %>% 
  head(100) %>% 
  mutate(Y = h/2-(Y-h/2))
```

## {background-image="https://decider.com/wp-content/uploads/2018/03/lost-in-space-60s.jpg?quality=90&strip=all&w=646&h=431&crop=1" background-size="1600px"}

## {background-image="https://cdn.mos.cms.futurecdn.net/YHXMXXEmBvyXUpTizWNkHP.jpg" background-size="cover"}

## {background-image="https://venkatarangan.com/blog/wp-content/uploads/2018/10/lost-in-space-pics.jpg" background-size="cover"}

## Quelle est la problématique? {background-image="Hyades.jpg" background-size="cover" data-background-color=black}

::: {.incremental}
- On veut trouver l'image suivante...
:::

## Quelle est la problématique? {background-image="seci2f2.jpg" background-size="1600px" data-background-color=black}

- On veut trouver l'image suivante...
- Dans l'image suivante!

## {background-image="elephant_trunk.jpg" background-size="cover"}

## Astrometry.net

![](Astrometry.png)

## Astrometry.net {.smaller}

Après quelques secondes, j'obtiens [ceci](https://nova.astrometry.net/user_images/7571958#annotated).

La figure de gauche place l'image sur la sphère céleste, une sphère imaginaire centrée sur la Terre.

::: {layout-ncol=3}

![](astrometry_trunk1.png)

![](astrometry_trunk2.png)

![](astrometry_trunk3.png)

:::

## La constellation de Céphée

![](https://upload.wikimedia.org/wikipedia/commons/c/c1/Cepheus_constellation_map-fr.png){fig-align="center}

## Shère céleste {.smaller}

Ce système utilise comme plan de référence la projection, sur la sphère céleste, de l'équateur de la Terre. Cette projection est l'équateur céleste.

- L'ascension droite (RA) est l'angle mesuré sur l'équateur céleste à partir d'un point de référence, le point vernal, ou équinoxe de printemps correspondant à l'intersection entre l'équateur céleste et l'écliptique. C'est au point vernal que le soleil apparaît au premier jour du printemps. À partir de ce point, l'angle est mesuré vers l'est et comporte 24 divisions horaires.

- La déclinaison (Dec) est l'angle mesuré perpendiculairement entre l'équateur céleste et l'objet céleste observé. Elle se mesure en degrés, positifs pour les objets situés dans l'hémisphère nord et négatifs pour ceux de l'hémisphère sud.

## Shère céleste


![](https://upload.wikimedia.org/wikipedia/commons/6/6a/Coordonnees_equatoriales.svg){fig-align="center"}



## Astrometry.net

| Info              |                            |
|-------------------|----------------------------|
| Center (RA, Dec)  | (323.622, 57.455)          |
| Center (RA, hms)  | 21h 34m 29.209s            |
| Center (Dec, dms) | +57$^\circ$ 27' 19.375''   |
| Size              | 44.4 $\times$ 29.1 arcmin  |
| Radius            | 0.442 deg                  |
| Pixel scale       | 0.645 arcsec/pixel         |
| Orientation       | Up is 348.3 degrees E of N |


## {background-image="astrometry_trunk_annotated.png" background-size="1200px"}

## Astrométrie {.smaller}

L'astrométrie, mieux connue autrefois sous le nom d'astronomie de position, est la branche de l'astronomie qui évalue la position, la distance et le mouvement des étoiles et des autres objets célestes.

- L'image prise par une caméra sur une navette peut déterminer l'orientation de cette navette;

- Permet de suivre une cible automatiquement avec un téléscope;

- Le nombre d'images astronomiques est faramineux, les formats sont divers, les méta-données accompagnant ces images sont souvent inaccessibles, de mauvaise qualité, etc.

Une des base de données utilisée est le [Sloan Digital Sky Survey](https://www.sdss.org/).

## Pourquoi est-ce si difficile? {data-background-color=black}


## {data-background-color=black}

#### Il faut trouver ce champ d'étoiles dans ce ciel 

![](rot_mysky_real_extra.png){.absolute top="100" left="10" width="500" height="500"}

![](thesky_real_missing.png){.absolute top="100" right="10" width="500" height="500"}

## {auto-animate="true" data-background-color=black}

#### Il faut trouver ce champ d'étoiles dans ce ciel 

- Étoiles manquantes

![](rot_mysky_real_extra_missing.png){.absolute top="100" left="10" width="500" height="500"}

![](thesky_real_missing.png){.absolute top="100" right="10" width="500" height="500"}

## {data-background-color=black}

#### Il faut trouver ce champ d'étoiles dans ce ciel 

- Étoiles manquantes
- Étoiles en trop

![](rot_mysky_real_missing.png){.absolute top="100" left="10" width="500" height="500"}

![](thesky_real_missing.png){.absolute top="100" right="10" width="500" height="500"}

## {data-background-color=black}

#### Il faut trouver ce champ d'étoiles dans ce ciel 

![](rot_mysky_real_missing_rect.png){.absolute top="100" left="10" width="500" height="500"}

![](thesky_real_missing.png){.absolute top="100" right="10" width="500" height="500"}


## {auto-animate="true" data-background-color=black}

#### Il faut trouver ce champ d'étoiles dans ce ciel 

![](thesky_real_missing.png){.absolute top="100" right="10" width="500" height="500"}

![](mysky_real_missing_rect.png){.absolute top="100" left="10" width="500" height="500"}

## {auto-animate="true" data-background-color=black}

#### Il faut trouver ce champ d'étoiles dans ce ciel 

![](thesky_real_missing.png){.absolute top="100" right="10" width="500" height="500"}

![](mysky_real_missing_rect.png){.absolute top="100" right="10" width="500" height="500"}

## Comment Astrometry.net fonctionne?

::: {.incremental}
- Nous devons créer un index à partir de base de données connues. Nous pouvons faire cette étape une seule fois, donc on peut prendre autant de temps voulu. 
- Ensuite, nous devons trouver un moyen de chercher à travers cet index pour localiser une image précise.
- Pour ce faire, on veut détecter certaines particularités d'une image et les décrire de telle façon qu'elles soient indépendantes de l'orientation et de l'échelle de l'image.
:::

## Détecter les étoiles

```{r}

#| label: mes-etoiles

elephant_raster <- as.raster(elephant)
ggplot(data = brightest, aes(x=X,y=Y))+
  annotation_raster(
    elephant_raster, 
    xmin=0, 
    xmax=w, 
    ymin=0, 
    ymax=h
  ) +
  geom_point(shape=1, colour="blue", fill=NA,size=3, stroke = 2)+
  coord_fixed()+
  theme_void()

```

## Détecter les étoiles

```{r}

#| label: mes-etoiles

elephant_raster <- as.raster(image_negate(elephant))
ggplot(data = brightest, aes(x=X,y=Y))+
  annotation_raster(
    elephant_raster, 
    xmin=0, 
    xmax=w, 
    ymin=0, 
    ymax=h
  ) +
  geom_point(shape=1, colour="blue", fill=NA,size=3, stroke = 2)+
  coord_fixed()+
  theme_void()

```

## Tikz

```{r quad-in-tikz, engine='tikz', fig.align='center'}
\usetikzlibrary{calc}
\usetikzlibrary{arrows.meta}
\begin{tikzpicture}[scale=1,rotate=20]

\coordinate[label={below left:A}] (A) at (0,0);
\coordinate[label={above right:B}] (B) at (4,4);
\coordinate[label={above left:C}] (C) at (0.8,2.4);
\coordinate[label={below right:D}] (D) at (2.8,1.2);

\draw[gray, fill=lightgray] (A)--(D)--(B)--(C)--cycle;

\draw[gray] (0,0)--(4,0)--(4,4)--(0,4)--cycle;
\draw[-Latex] (0,0)--(3.9,0);
\draw[-Latex] (0,0)--(0,3.9);

\draw[dashed] (0,2.4) node[left] {$y_C$} -- (0.8,2.4) -- (0.8,0) node[below] {$x_C$};
\draw[dashed] (0,1.2) node[left] {$y_D$} -- (2.8,1.2) -- (2.8,0) node[below] {$x_D$};

\draw (4,0)--++(0,-0.1) node[below] {1};
\draw (0,4)--++(-0.1,0) node[left] {1};

\draw[thick] (2,2) circle (2.8284);
\foreach \pt in {A,B,C,D}{
	\draw[fill=black] (\pt) circle (1pt);
}

\end{tikzpicture}
```





